alias 2..="cd ../../.."
alias 3..="cd ../../.."
alias 4..="cd ../../../.."
alias 5..="cd ../../../../.."

export USE_CCACHE=1

export PAGER="less -r"
export QEMU_AUDIO_DRV=none

# set compose key
#setxkbmap -option compose:lwin

function! cgrep() {
	grep -rnH \
		--binary-files=without-match \
		--exclude-dir=html \
		--exclude-dir=doc \
		--exclude-dir=.git \
		--exclude-dir=.svn "$@" .
}
alias gr=cgrep

function! objectdump() {
  objdump -ldSC $1 | vim -
}
alias od=objectdump

function! cvim() {
  file="$(echo "$1" | cut -d ':' -f 1)"
  line="$(echo "$1" | cut -d ':' -f 2)"
  emacsclient "+$line" "$file"
}

function! thinkpad_disable_keyboard ()
{
  id=`xinput list | grep 'AT Translated Set 2' | cut -f 2 | cut -f 2 -d =`
  xinput float $id
}

function! thinkpad_enable_keyboard ()
{
  id=`xinput list | grep 'AT Translated Set 2' | cut -f 2 | cut -f 2 -d =`
  core=`xinput list | grep 'Virtual core keyboard' | cut -f 2 | cut -f 2 -d =`
  xinput reattach $id $core
}

alias swapesc="setxkbmap -option caps:swapescape"

export XDG_CONFIG_HOME="/home/steffen/.config/"
if [ `hostname` == "charon" ];
then
  source $HOME/.zshrc.charon
fi

if [ -e $HOME/.zshrc.emacs ];
then
  source $HOME/.zshrc.emacs
fi

if [ -e $HOME/.zshrc.kk ];
then
  source $HOME/.zshrc.kk
fi

alias pp="spotifycmd playpause"
# alias pp="qdbus org.kde.amarok /Player org.freedesktop.MediaPlayer.PlayPause"

# zz - smart directory changer
# taken from http://chneukirchen.org/dotfiles/.zshrc
# 14dec2015  +chris+
# 15dec2015  +chris+ clean up nonexisting paths
chpwd_zz() {
  print -P '0\t%D{%s}\t1\t%~' >>~/.zz
}

zz() {
  awk -v ${(%):-now='%D{%s}'} <~/.zz '
    function r(t,f) {
      age = now - t
      return (age<3600) ? f*4 : (age<86400) ? f*2 : (age<604800) ? f/2 : f/4
    }
    { f[$4]+=$3; if ($2>l[$4]) l[$4]=$2 }
    END { for(i in f) printf("%d\t%d\t%d\t%s\n",r(l[i],f[i]),l[i],f[i],i) }' |
      sort -k2 -n -r | sed 9000q | sort -n -r -o ~/.zz
  if (( $# )); then
    local p=$(awk 'NR != FNR { exit }  # exit after first file argument
                   { for (i = 3; i < ARGC; i++) if ($4 !~ ARGV[i]) next
                     print $4; exit }' ~/.zz ~/.zz "$@")
    [[ $p ]] || return 1
    local op=print
    [[ -t 1 ]] && op=cd
    if [[ -d ${~p} ]]; then
      $op ${~p}
    else
      # clean nonexisting paths and retry
      while read -r line; do
        [[ -d ${~${line#*$'\t'*$'\t'*$'\t'}} ]] && print -r $line
      done <~/.zz | sort -n -r -o ~/.zz
      zz "$@"
    fi
  else
    sed 10q ~/.zz
  fi
}

autoload -U add-zsh-hook
add-zsh-hook chpwd chpwd_zz

alias z=' zz'

function up() {
  local op=print
  [[ -t 1 ]] && op=cd
  case "$1" in
    '') up 1;;
    -*|+*) $op ~$1;;
    <->) $op $(printf '../%.0s' {1..$1});;
    *) local -a seg; seg=(${(s:/:)PWD%/*})
       local n=${(j:/:)seg[1,(I)$1*]}
       if [[ -n $n ]]; then
         $op /$n
       else
         print -u2 up: could not find prefix $1 in $PWD
         return 1
       fi
  esac
}

